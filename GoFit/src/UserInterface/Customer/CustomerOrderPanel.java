/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Customer;

import Business.Customer.Customer;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Products;
import Business.Enterprise.StoreOutletEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.StoreOutletOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.StoreOutletWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rutujakute
 */
public class CustomerOrderPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Ecosystem business;
    private Enterprise enterprise;
    private int cartCount=0;
    private String total;
    private int itemCount = 0;
    private ArrayList<Products> cusList;
    private ArrayList<Products> histList;
    private Customer customer;
    private Network network;
    
    
    public CustomerOrderPanel(JPanel userProcessContainer, Customer customer, Ecosystem system, UserAccount userAccount, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.customer = customer;
        this.business=system;
        this.enterprise=enterprise;
        this.network = network;
        this.cusList = new ArrayList<>();
        this.histList = new ArrayList<>();
        
        populateStoreProducts();
    }

    private void populateStoreProducts(){
    DefaultTableModel dtm = (DefaultTableModel) storeTbl.getModel();
        dtm.setRowCount(0);
        for(Network net : business.getNetworkList()){ 
            for(Enterprise e: net.getEnterpriseDirectory().getEnterpriseList()){
                 for(Products i: e.getProductsList()) {
                    Object row[] = new Object[3];
                    row[0] = i.getProductType();
                    row[1] = i;
                    row[2] = i.getPrice();
                    dtm.addRow(row);
                 }
            }
        }
        
       DefaultTableModel dtm1 = (DefaultTableModel) histTbl.getModel();
       dtm1.setRowCount(0);
        for(Network net : business.getNetworkList()){ 
            for(Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o: e.getOrganizationDirectory().getOrganizationList()){
                    for(WorkRequest request : o.getWorkQueue().getWorkRequestList()){
                           if(request.getReceiver() != null && request.getReceiver().getRole().toString().equals("Business.Role.DeliveryMan")){
                               if(request.getWorkStatus().toLowerCase().equals("delivered")){
                                   int ord = request.getRequestID();
                                   Object row[] = new Object[4];
                                        row[0] = ord;
                                        row[1] = request.getWorkRequestDate();
                                        row[2] = request;
                                        row[3] = ((StoreOutletWorkRequest)request).getTotalBill();
                                        dtm1.addRow(row);
                               }
                           }
                    }
                }
            }
        }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeTbl = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        histTbl = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        invoiceTbl = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        histItemTbl = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addToCartBtn = new javax.swing.JButton();
        addToCartHistBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        totBillTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerNotes = new javax.swing.JTextArea();
        delCartBtn = new javax.swing.JButton();
        placeOrderBtn = new javax.swing.JButton();

        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER DETAILS");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 450, 30));

        backBtn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        backBtn.setText(" Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 100, 30));

        storeTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        storeTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Type", "Item", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeTbl);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 210, 80));

        histTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        histTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Date", "Message", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(histTbl);

        kGradientPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 290, 80));

        invoiceTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        invoiceTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(invoiceTbl);

        kGradientPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 220, 80));

        histItemTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        histItemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(histItemTbl);

        kGradientPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 250, 80));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Store Inventories");
        kGradientPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 200, 20));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Order History");
        kGradientPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 240, 30));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Cart Items");
        kGradientPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 220, 20));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Order History Details");
        kGradientPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 250, 30));

        addToCartBtn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        addToCartBtn.setText("Add To Cart");
        addToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(addToCartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        addToCartHistBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        addToCartHistBtn.setText("Show Items");
        addToCartHistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartHistBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(addToCartHistBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Message:");
        kGradientPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 99, 40));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Total Price:");
        kGradientPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 125, -1));

        totBillTxt.setEditable(false);
        totBillTxt.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        kGradientPanel1.add(totBillTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, 260, -1));

        customerNotes.setColumns(20);
        customerNotes.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        customerNotes.setRows(5);
        jScrollPane2.setViewportView(customerNotes);

        kGradientPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 260, 40));

        delCartBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        delCartBtn.setText("Delete From Cart");
        delCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCartBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(delCartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 140, 30));

        placeOrderBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        placeOrderBtn.setText("Place Order");
        placeOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(placeOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 140, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = storeTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            Products i = (Products)storeTbl.getValueAt(selectedRow,1);
            cartCount++;
            cusList.add(i);
            this.total=populateTable();
            totBillTxt.setText(this.total);
            JOptionPane.showMessageDialog(null, "Added to cart successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addToCartBtnActionPerformed

    private void addToCartHistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartHistBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = histTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            WorkRequest i = (WorkRequest)histTbl.getValueAt(selectedRow,2);
            histList = ((StoreOutletWorkRequest)i).getCustomerList();
            DefaultTableModel dtm = (DefaultTableModel) histItemTbl.getModel();
            dtm.setRowCount(0);
            for(int d=0;d<histList.size();d++){
                Object row[] = new Object[2];

                row[0] = histList.get(d).getProductName();
                row[1] = histList.get(d).getPrice();
                dtm.addRow(row);
            }
        }

    }//GEN-LAST:event_addToCartHistBtnActionPerformed

    private void delCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCartBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = invoiceTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            Products i = (Products)invoiceTbl.getValueAt(selectedRow,0 );
            cusList.remove(i);
            this.total=populateTable();
            totBillTxt.setText(this.total);

            //JOptionPane.showMessageDialog(null, "Deleted from cart successfully","Success",JOptionPane.INFORMATION_MESSAGE)
        }
    }//GEN-LAST:event_delCartBtnActionPerformed

    private void placeOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderBtnActionPerformed
        // TODO add your handling code here:
        if(invoiceTbl.getRowCount() > 0 && cartCount > 0){
            StoreOutletWorkRequest request = new StoreOutletWorkRequest();
            request.setCustomerList(cusList);
            request.setSender(userAccount);
            request.setWorkStatus("Order Placed");
            request.setTotalBill(Integer.parseInt(totBillTxt.getText()));
            request.setWorkMessage(customerNotes.getText());
            Organization org = null;
            for(Network net: business.getNetworkList()){
                for(Enterprise enter : net.getEnterpriseDirectory().getEnterpriseList()){
                    if(enter instanceof StoreOutletEnterprise){
                        for (Organization organization : enter.getOrganizationDirectory().getOrganizationList()){
                            if (organization instanceof StoreOutletOrganization){
                                org = organization;
                                break;
                            }
                        }
                    }
                }
            }

            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Order placed successfully","Success",JOptionPane.INFORMATION_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Please add the menus to the cart to place the order.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }//GEN-LAST:event_placeOrderBtnActionPerformed

    
        private void populateRequestTable(String name) {
        DefaultTableModel dtm = (DefaultTableModel) storeTbl.getModel();
        dtm.setRowCount(0);
        for(Enterprise e:business.getEnterpriseDirectory().getEnterpriseList())
        {
            if(name == String.valueOf(e)){
                 for(Products item:e.getProductsList())
                    {
                         Object row[] = new Object[2];
                         row[0] = item;
                         row[1] = item.getPrice();
                         dtm.addRow(row);
                     }
            }
      
        }
    }

    public String populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) invoiceTbl.getModel();
        dtm.setRowCount(0);
        int totalBill=0;
        for(int i=itemCount;i<cusList.size();i++) {
            Object row[] = new Object[2];
            
            row[0] = cusList.get(i);
            row[1] = cusList.get(i).getPrice();
            totalBill=totalBill+ cusList.get(i).getPrice();
            dtm.addRow(row);
        }
        
        
    return String.valueOf(totalBill);
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartBtn;
    private javax.swing.JButton addToCartHistBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextArea customerNotes;
    private javax.swing.JButton delCartBtn;
    private javax.swing.JTable histItemTbl;
    private javax.swing.JTable histTbl;
    private javax.swing.JTable invoiceTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JButton placeOrderBtn;
    private javax.swing.JTable storeTbl;
    private javax.swing.JTextField totBillTxt;
    // End of variables declaration//GEN-END:variables
}
