
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.SystemAdminOps;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.Admin;
import Business.Role.EnterpriseAdmin;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geets
 */
public class ManageEnterpriseAdminPanel extends javax.swing.JPanel {

    private Ecosystem system;
    private JPanel userContainer;
    private int isEnterpriseAvailable = 0;

    /**
     * Creates new form ManageEnterpriseAdminPanel
     *
     * @param userContainer
     * @param system
     */
    public ManageEnterpriseAdminPanel(JPanel userContainer, Ecosystem system) {
        initComponents();
        this.system = system;
        this.userContainer = userContainer;
        populateTabl();
        populateNetwrkComboBox();

    }

    private void populateTabl() {
        try {
            DefaultTableModel model = (DefaultTableModel) enterprisejTable.getModel();

            model.setRowCount(0);
            for (Network network : system.getNetworkList()) {
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    for (UserAccount userAccount : enterprise.getUserAccountList().getUserAccountList()) {
                        Object[] row = new Object[5];
                        row[0] = userAccount.getEmployee().getEmpId();
                        row[1] = userAccount.getEmployee().getEmployeeName();
                        row[2] = enterprise.getName();
                        row[3] = network.getNetworkName();
                        row[4] = userAccount.getUsername();

                        model.addRow(row);
                    }
                }
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }
    }

    private void populateNetwrkComboBox() {
        try {
            networkComboBox.removeAllItems();

            for (Network network : system.getNetworkList()) {
                networkComboBox.addItem(network);
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }
    }

    private void populateEnterpComboBox(Network network) {
        try {
            EnterpriseComboBox.removeAllItems();

            for (Enterprise enterpr : network.getEnterpriseDirectory().getEnterpriseList()) {
                EnterpriseComboBox.addItem(enterpr);
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisejTable = new javax.swing.JTable();
        submitjButton = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        netjLabel = new javax.swing.JLabel();
        entrjLabel = new javax.swing.JLabel();
        emailjLabel = new javax.swing.JLabel();
        passjLabel = new javax.swing.JLabel();
        namejLabel = new javax.swing.JLabel();
        networkComboBox = new javax.swing.JComboBox();
        EnterpriseComboBox = new javax.swing.JComboBox();
        emailjTextField = new javax.swing.JTextField();
        passwordjTextField = new javax.swing.JPasswordField();
        namejTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/imgBack.png"))); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 50));

        enterprisejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "EmployeeID", "EmployeeName", "EnterpriseName", "State", "EmailID"
            }
        ));
        jScrollPane1.setViewportView(enterprisejTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 99, 487, 87));

        submitjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/imgSave.png"))); // NOI18N
        submitjButton.setText("Submit");
        submitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitjButtonActionPerformed(evt);
            }
        });
        add(submitjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, 170, 50));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("MANAGE ENTERPRISE ADMIN");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 15, 347, 48));

        kGradientPanel1.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 153, 0));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        netjLabel.setForeground(new java.awt.Color(255, 255, 255));
        netjLabel.setText("Network");
        kGradientPanel1.add(netjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 150, 60));

        entrjLabel.setForeground(new java.awt.Color(255, 255, 255));
        entrjLabel.setText("Enterprise");
        kGradientPanel1.add(entrjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 110, 50));

        emailjLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailjLabel.setText("Email ID");
        kGradientPanel1.add(emailjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 100, 40));

        passjLabel.setForeground(new java.awt.Color(255, 255, 255));
        passjLabel.setText("Password");
        kGradientPanel1.add(passjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 130, 50));

        namejLabel.setForeground(new java.awt.Color(255, 255, 255));
        namejLabel.setText("Name");
        kGradientPanel1.add(namejLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 430, 80, 50));

        networkComboBox.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });
        kGradientPanel1.add(networkComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 230, 40));

        EnterpriseComboBox.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        kGradientPanel1.add(EnterpriseComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 230, 40));

        emailjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailjTextFieldActionPerformed(evt);
            }
        });
        kGradientPanel1.add(emailjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 230, 40));
        kGradientPanel1.add(passwordjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, 230, 40));
        kGradientPanel1.add(namejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, 230, 40));

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 660));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        try {
            userContainer.remove(this);
            Component[] trackComponent = userContainer.getComponents();
            Component eachComponent = trackComponent[trackComponent.length - 1];
            SystemAdminOperations sysAdminOps = (SystemAdminOperations) eachComponent;
            CardLayout cardLayout = (CardLayout) userContainer.getLayout();
            cardLayout.previous(userContainer);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboBoxActionPerformed
        try {
            Network network = (Network) networkComboBox.getSelectedItem();
            if (network != null) {
                populateEnterpComboBox(network);
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }

    }//GEN-LAST:event_networkComboBoxActionPerformed

    private void submitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitjButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (validateData()) {
                Enterprise enterprise = (Enterprise) EnterpriseComboBox.getSelectedItem();
                if (enterprise.getEmployeeList().getEmployeeList().size() != 0) {
                    isEnterpriseAvailable = 1;
                } else if (isEnterpriseAvailable != 1) {

                    String username = emailjTextField.getText();
                    String password = String.valueOf(passwordjTextField.getPassword());
                    String name = namejTextField.getText();

                    Employee employee = enterprise.getEmployeeList().createEmployee(name);

                    UserAccount account = enterprise.getUserAccountList().createUserAccount(username, password, employee, new EnterpriseAdmin());
                    populateTabl();
                    networkComboBox.setSelectedIndex(0);
                    EnterpriseComboBox.setSelectedIndex(0);
                    emailjTextField.setText("");
                    passwordjTextField.setText("");
                    namejTextField.setText("");
                    //clearLabels();

                } else {
                    if (isEnterpriseAvailable == 1) {
                        JOptionPane.showMessageDialog(null, "Enterprise admin is already added !", "Alert", JOptionPane.INFORMATION_MESSAGE);
                        emailjTextField.setText("");
                        passwordjTextField.setText("");
                        namejTextField.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter all the required fields correctly!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Please try again");

        }
    }//GEN-LAST:event_submitjButtonActionPerformed

    private void emailjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailjTextFieldActionPerformed

    public boolean validateData() {

        String name = namejTextField.getText();
        String password = passwordjTextField.getText();

        namejTextField.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordjTextField.setBorder(new LineBorder(new Color(128, 128, 128)));

        if (EnterpriseComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select an enterprise");
            return false;
        }
        if (networkComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select a network");
            return false;
        }

        if (!emailAddressValidation(emailjTextField.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address");
            emailjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            emailjLabel.setForeground(Color.RED);
            return false;
        }

        if (password == null || password.equals("")) {
            JOptionPane.showMessageDialog(null, "Password can't be empty.");
            passwordjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            passjLabel.setForeground(Color.RED);
            return false;
        }

        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Paasword should be at least 6 digits and+"
                    + " a combination of number, uppercarse, lowercase abd secial cjaracter $,*,#,&");
            passwordjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            return false;
        }

        if (namejTextField.getText().length() <= 2 || !namejTextField.getText().matches("[a-zA-Z]+")) {
            namejTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            namejLabel.setForeground(Color.RED);
            JOptionPane.showMessageDialog(this, "Please enter a valid name consisting of more than 2 letters");
            return false;
        }

        if (name == null || name.equals("")) {
            namejTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            namejLabel.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter name");
            return false;
        }

        return true;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox EnterpriseComboBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel emailjLabel;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JTable enterprisejTable;
    private javax.swing.JLabel entrjLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel namejLabel;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JLabel netjLabel;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JLabel passjLabel;
    private javax.swing.JPasswordField passwordjTextField;
    private javax.swing.JButton submitjButton;
    // End of variables declaration//GEN-END:variables

    private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[$*#&])[A-Za-z\\d$*#&]{6,}$");
        Matcher m = p.matcher(passwordjTextField.getText());
        boolean b = m.matches();
        return b;

    }

    private boolean emailAddressValidation(String email) {
        String emailValidation = "^[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        Pattern pattern = Pattern.compile(emailValidation);
        Matcher m = pattern.matcher(email);
        return m.matches();
    }
}
