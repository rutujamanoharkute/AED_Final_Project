/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Physiotherapist;

import Business.Customer.Customer;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Employee.Employee;
import Business.Organization.PhysiotherapistOrganization;
import Business.Organization.NutritionistOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.WorkRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PhysiotherapistWorkRequest;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geets
 */
public class PhysiotherapistWorkAreaJPanel extends javax.swing.JPanel {

    UserAccount account;
    JPanel userContainer;
    Enterprise enterprise;
    NutritionistOrganization nutritionOrganisation;
    Network network;
    Ecosystem ecosystem;

    /**
     * Creates new form PhysiotherapistWorkAreaJPanel
     */
    public PhysiotherapistWorkAreaJPanel(JPanel userContainer, Enterprise enterprise, Organization organization, UserAccount account, Ecosystem business, Network network) {
        initComponents();
        this.network = network;
        this.enterprise = enterprise;
        this.ecosystem = business;
        this.userContainer = userContainer;
        this.account = account;

        welLbl.setText(account.getEmployee().getEmployeeName() + "!!");
        populateCustom();

    }

    public void populateCustom() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) CustomerListTbl.getModel();
            dtm.setRowCount(0);

            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                for (Employee emp : org.getEmployeeList().getEmployeeList()) {
                    if (emp.toString().equals(account.getEmployee().getEmployeeName())) {
                        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
                            Customer cust = request.getSender().getCustomer();

                            Object[] row = new Object[4];
                            row[0] = cust.getId();
                            row[1] = cust;
                            row[2] = request;
                            row[3] = request.getWorkStatus();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please try again");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        welLbl = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerListTbl = new javax.swing.JTable();
        nameTxtField = new javax.swing.JTextField();
        ageTxtField = new javax.swing.JTextField();
        nameLb = new javax.swing.JLabel();
        ageLb = new javax.swing.JLabel();
        genderLb = new javax.swing.JLabel();
        heightLb = new javax.swing.JLabel();
        Maleradio = new javax.swing.JRadioButton();
        Femaleradio = new javax.swing.JRadioButton();
        noneCheckbox = new javax.swing.JCheckBox();
        viewDetButn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        diabCheckbox = new javax.swing.JCheckBox();
        cholestrolCheckbox = new javax.swing.JCheckBox();
        thyroidCheckbox = new javax.swing.JCheckBox();
        pcosCheckbox = new javax.swing.JCheckBox();
        hyperCheckbox = new javax.swing.JCheckBox();
        heightTxtField = new javax.swing.JTextField();
        weightTxtField = new javax.swing.JTextField();
        weightLb = new javax.swing.JLabel();
        msgLb = new javax.swing.JLabel();
        docMsgTxt = new javax.swing.JTextField();
        ProcessReqjButton = new javax.swing.JButton();
        kGradientPanel1 = new keeptoo.KGradientPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Welcome,");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, -40, 120, 140));

        welLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        welLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel3.add(welLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, -50, 320, 160));

        kGradientPanel2.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel3.add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 790, -1));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 60));

        CustomerListTbl.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        CustomerListTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CustomerListTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 66, 675, 91));

        nameTxtField.setEditable(false);
        nameTxtField.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        add(nameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 223, 150, 30));

        ageTxtField.setEditable(false);
        add(ageTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 263, 150, 30));

        nameLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        nameLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLb.setText("Name:");
        add(nameLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 223, 107, 30));

        ageLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        ageLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageLb.setText("Age:");
        add(ageLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 263, 90, 30));

        genderLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        genderLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        genderLb.setText("Gender:");
        add(genderLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 303, 107, 20));

        heightLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        heightLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        heightLb.setText("Height(in cms):");
        add(heightLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 343, -1, 30));

        Maleradio.setBackground(new java.awt.Color(255, 255, 255));
        Maleradio.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        Maleradio.setText("Male");
        Maleradio.setEnabled(false);
        Maleradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleradioActionPerformed(evt);
            }
        });
        add(Maleradio, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 303, 68, -1));

        Femaleradio.setBackground(new java.awt.Color(255, 255, 255));
        Femaleradio.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        Femaleradio.setText("Female");
        Femaleradio.setEnabled(false);
        Femaleradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemaleradioActionPerformed(evt);
            }
        });
        add(Femaleradio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 303, 72, -1));

        noneCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        noneCheckbox.setText("None");
        noneCheckbox.setEnabled(false);
        add(noneCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 253, 90, -1));

        viewDetButn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        viewDetButn.setText("View Details");
        viewDetButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetButnActionPerformed(evt);
            }
        });
        add(viewDetButn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 163, 138, 45));

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(80, 80, 82));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Health Issues");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 223, 310, -1));

        diabCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        diabCheckbox.setText("Diabetes");
        diabCheckbox.setEnabled(false);
        add(diabCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 253, 90, -1));

        cholestrolCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        cholestrolCheckbox.setText("Cholestrol");
        cholestrolCheckbox.setEnabled(false);
        add(cholestrolCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 253, 90, -1));

        thyroidCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        thyroidCheckbox.setText("Thyroid");
        thyroidCheckbox.setEnabled(false);
        add(thyroidCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(616, 293, 90, -1));

        pcosCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        pcosCheckbox.setText("PCOS");
        pcosCheckbox.setEnabled(false);
        add(pcosCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(506, 293, 90, -1));

        hyperCheckbox.setBackground(new java.awt.Color(255, 255, 255));
        hyperCheckbox.setText("Hypertension");
        hyperCheckbox.setEnabled(false);
        hyperCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hyperCheckboxActionPerformed(evt);
            }
        });
        add(hyperCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 293, -1, -1));

        heightTxtField.setEditable(false);
        add(heightTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 343, 150, 30));

        weightTxtField.setEditable(false);
        add(weightTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 383, 150, 30));

        weightLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        weightLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightLb.setText("Weight (in Kgs):");
        add(weightLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 383, -1, 30));

        msgLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        msgLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        msgLb.setText("Message:");
        add(msgLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 447, 110, 50));

        docMsgTxt.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        add(docMsgTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 433, 296, 80));

        ProcessReqjButton.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        ProcessReqjButton.setText("Process Request");
        ProcessReqjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessReqjButtonActionPerformed(evt);
            }
        });
        add(ProcessReqjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 553, -1, 40));

        kGradientPanel1.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 630));
    }// </editor-fold>//GEN-END:initComponents

    private void MaleradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleradioActionPerformed
        Femaleradio.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_MaleradioActionPerformed

    private void FemaleradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemaleradioActionPerformed
        Maleradio.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_FemaleradioActionPerformed

    private void viewDetButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetButnActionPerformed
        // TODO add your handling code here:
        try
        {
        int selectedRow = CustomerListTbl.getSelectedRow();
        if (selectedRow >= 0) {
            Customer customer = (Customer) CustomerListTbl.getValueAt(selectedRow, 1);
            nameTxtField.setText(customer.getName());
            ageTxtField.setText(String.valueOf(customer.getAge()));
            if (customer.getGender().toLowerCase().equals("male")) {
                Maleradio.setSelected(true);
            } else {
                Femaleradio.setSelected(false);
            }
            heightTxtField.setText(String.valueOf(customer.getHeight()));
            weightTxtField.setText(String.valueOf(customer.getWeight()));
            diabCheckbox.setSelected(customer.getIs_diabetes());
            cholestrolCheckbox.setSelected(customer.getIs_cholestrol());
            hyperCheckbox.setSelected(customer.getIs_hypertension());
            noneCheckbox.setSelected(customer.getIs_None());
            thyroidCheckbox.setSelected(customer.getIs_thyroid());
            pcosCheckbox.setSelected(customer.getIs_pcos());

        } else {
            JOptionPane.showMessageDialog(null, "Please Select a row", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_viewDetButnActionPerformed

    private void hyperCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hyperCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hyperCheckboxActionPerformed

    private void ProcessReqjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessReqjButtonActionPerformed
        try
        {
        int selectedRow = CustomerListTbl.getSelectedRow();
        if (selectedRow >= 0) {
            PhysiotherapistWorkRequest request = (PhysiotherapistWorkRequest) CustomerListTbl.getValueAt(selectedRow, 2);
            if (!"Result Posted".equals(request.getWorkStatus())) {
                request.setWorkStatus("Result Posted");
                request.setPhysiotherapistResult(docMsgTxt.getText());
                String email = request.getSender().getUsername();
                String name = account.getEmployee().getEmployeeName();
                populateCustom();
                JOptionPane.showMessageDialog(null, "Email has been sent to Customer!", "Success", JOptionPane.INFORMATION_MESSAGE);
                docMsgTxt.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Result has been already Processed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please Select a row", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessReqjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerListTbl;
    private javax.swing.JRadioButton Femaleradio;
    private javax.swing.JRadioButton Maleradio;
    private javax.swing.JButton ProcessReqjButton;
    private javax.swing.JLabel ageLb;
    private javax.swing.JTextField ageTxtField;
    private javax.swing.JCheckBox cholestrolCheckbox;
    private javax.swing.JCheckBox diabCheckbox;
    private javax.swing.JTextField docMsgTxt;
    private javax.swing.JLabel genderLb;
    private javax.swing.JLabel heightLb;
    private javax.swing.JTextField heightTxtField;
    private javax.swing.JCheckBox hyperCheckbox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JLabel msgLb;
    private javax.swing.JLabel nameLb;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JCheckBox noneCheckbox;
    private javax.swing.JCheckBox pcosCheckbox;
    private javax.swing.JCheckBox thyroidCheckbox;
    private javax.swing.JButton viewDetButn;
    private javax.swing.JLabel weightLb;
    private javax.swing.JTextField weightTxtField;
    private javax.swing.JLabel welLbl;
    // End of variables declaration//GEN-END:variables
}
