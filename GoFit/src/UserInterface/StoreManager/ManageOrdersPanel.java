/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.StoreManager;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Products;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.StoreOutletWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshada
 */
public class ManageOrdersPanel extends javax.swing.JPanel {
    
    private JPanel userContainer;
    private UserAccount userAcc;
    private UserAccount account;
    //private Organization organization;
    private Enterprise enterprise;
    private Ecosystem system;
    
    /**
     * Creates new form ManageOrdersPanel
     * @param userContainer
     * @param organization
     * @param system
     * @param enterprise
     * @param account
     */
    public ManageOrdersPanel(JPanel userContainer, Organization organization, Ecosystem system, Enterprise enterprise, UserAccount account) {
        initComponents();
          this.userContainer = userContainer;
       this.account=account;
       
        this.enterprise=enterprise;
        this.system=system;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        totBillTxt = new javax.swing.JTextField();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderManagement = new javax.swing.JTable();
        viewOrderBtn = new javax.swing.JButton();
        btnTakeOrder = new javax.swing.JButton();
        btnAssignDeliveryMan = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblProduct.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProduct);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Total Price:");

        totBillTxt.setEditable(false);

        kGradientPanel1.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 153, 0));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Order Details");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 452, 40));

        tblOrderManagement.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        tblOrderManagement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrderManagement);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 700, 91));

        viewOrderBtn.setText("View Order");
        viewOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(viewOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 289, -1, -1));

        btnTakeOrder.setText("Take Order");
        btnTakeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeOrderActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btnTakeOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 289, -1, -1));

        btnAssignDeliveryMan.setText("Assign Deliveryman");
        btnAssignDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDeliveryManActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btnAssignDeliveryMan, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 290, -1, -1));

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        kGradientPanel1.add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, -1, -1));

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(115, 282, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(195, 398, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(61, 61, 61)
                            .addComponent(totBillTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 102, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 420, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel6))
                        .addComponent(totBillTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 55, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderBtnActionPerformed
        // TODO add your handling code here:
        try{
        int selectedRow = tblOrderManagement.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to perform any operation","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        StoreOutletWorkRequest request = (StoreOutletWorkRequest) tblOrderManagement.getValueAt(selectedRow, 2);
        DefaultTableModel dtm = (DefaultTableModel) tblProduct.getModel();
        dtm.setRowCount(0);

        for(Products p: request.getCustomerList()) {
            Object row[] = new Object[2];
            row[0] = p;
            row[1] = p.getPrice();
            dtm.addRow(row);
        }
        totBillTxt.setText(String.valueOf(request.getTotalBill()));
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_viewOrderBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void btnTakeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeOrderActionPerformed
        // TODO add your handling code here:
        try{
        int selectedRow = tblOrderManagement.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        StoreOutletWorkRequest request = (StoreOutletWorkRequest)tblOrderManagement.getValueAt(selectedRow, 2);
        if(!(request.getWorkStatus().equals("Your Order is placed. Thanks for shopping with us!!"))){
            JOptionPane.showMessageDialog(this, "Your order has been accepted. Thankyou for your patience!!.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return ; }

        request.setWorkStatus("Accepted");

        JOptionPane.showMessageDialog(this, "Order accepted successfully.","Success",JOptionPane.INFORMATION_MESSAGE);
        populateTable();
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnTakeOrderActionPerformed

    private void btnAssignDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDeliveryManActionPerformed
        // TODO add your handling code here:
        try{
        int selectedRow = tblOrderManagement.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        StoreOutletWorkRequest order = (StoreOutletWorkRequest)tblOrderManagement.getValueAt(selectedRow, 2);
        if(order.getWorkStatus().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(this, "Your Order is delivered.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return ; }
        if(order.getWorkStatus().equalsIgnoreCase("Out for Delivery")){
            JOptionPane.showMessageDialog(this, "Delivery Man is assigned for your Order. Out for Delivery","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return ;
        }
//        if(!order.getWorkStatus().equalsIgnoreCase("Accepted")){
//            JOptionPane.showMessageDialog(this, ".Kindly accept the order first to proceed.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
//            return ;
//        }
        DeliveryManAssignmentPanel panel = new DeliveryManAssignmentPanel(userContainer,system, enterprise, order);
        userContainer.add("AssignDeliveryManJPanel", panel);
        CardLayout cardlayout = (CardLayout) userContainer.getLayout();
        cardlayout.next(userContainer);
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnAssignDeliveryManActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
          try{
        userContainer.remove(this);
        CardLayout layout = (CardLayout)userContainer.getLayout();
        layout.previous(userContainer);
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignDeliveryMan;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnTakeOrder;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTable tblOrderManagement;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField totBillTxt;
    private javax.swing.JButton viewOrderBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       DefaultTableModel dtm = (DefaultTableModel) tblOrderManagement.getModel();
        dtm.setRowCount(0);
        
         for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
           int orderID = request.getRequestID();
            row[0] = orderID;
            row[1] = request.getSender().getCustomer().getName();
            row[2] = request;
            row[3] = request.getWorkStatus();
            
            dtm.addRow(row);
        }
         }
    }
}
