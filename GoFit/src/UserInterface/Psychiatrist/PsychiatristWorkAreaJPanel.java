/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Psychiatrist;


import Business.Customer.Customer;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Employee.Employee;
import Business.Organization.PsychiatristOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Organization.NutritionistOrganization;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.PsychiatristWorkRequest;
import java.util.Properties;
import javax.swing.JOptionPane;
import java.io.IOException;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geets
 */
public class PsychiatristWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userContainer;
    UserAccount account;
    Network network;
    Ecosystem ecosystem;
    NutritionistOrganization nutritionOrganisation;
    Enterprise enterprise;
   
    /**
     * Creates new form PsychiatristWorkAreaJPanel
     */
    public PsychiatristWorkAreaJPanel(JPanel userContainer, Enterprise enterprise, Organization organization, UserAccount account, Ecosystem business, Network network) {
        initComponents();
         this.account = account;
         this.userContainer = userContainer;
         this.network = network;
         this.enterprise = enterprise;
         this.ecosystem = business;
         welLbl.setText(account.getEmployee().getEmployeeName() + "!!");
         populateCustom();
    }
    public void populateCustom(){
        DefaultTableModel dtm = (DefaultTableModel) CustomerListTbl.getModel();
        dtm.setRowCount(0);
        
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
        for(Employee emp : org.getEmployeeList().getEmployeeList()){
            if(emp.toString().equals(account.getEmployee().getEmployeeName())){
                for( WorkRequest request: account.getWorkQueue().getWorkRequestList()){
                Customer cust = request.getSender().getCustomer();
            
            Object[] row = new Object[4];
            row[0] = cust.getId();
            row[1] = cust;
            row[2] = request;
            row[3] = request.getWorkStatus();
            dtm.addRow(row);
           }
            }
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitlePanel = new javax.swing.JPanel();
        displaynameLb = new javax.swing.JLabel();
        welLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerListTbl = new javax.swing.JTable();
        viewDetButn = new javax.swing.JButton();
        nameLb = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        ageLb = new javax.swing.JLabel();
        ageTxtField = new javax.swing.JTextField();
        genderLb = new javax.swing.JLabel();
        Maleradio = new javax.swing.JRadioButton();
        Femaleradio = new javax.swing.JRadioButton();
        heightTxtField = new javax.swing.JTextField();
        heightLb = new javax.swing.JLabel();
        weightLb = new javax.swing.JLabel();
        weightTxtField = new javax.swing.JTextField();
        msgLb = new javax.swing.JLabel();
        docMsgTxt = new javax.swing.JTextField();
        noneCheckbox = new javax.swing.JCheckBox();
        hyperCheckbox = new javax.swing.JCheckBox();
        pcosCheckbox = new javax.swing.JCheckBox();
        diabCheckbox = new javax.swing.JCheckBox();
        issueLb = new javax.swing.JLabel();
        cholestrolCheckbox = new javax.swing.JCheckBox();
        thyroidCheckbox = new javax.swing.JCheckBox();
        ProcessReqjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        TitlePanel.setBackground(new java.awt.Color(255, 255, 255));
        TitlePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        displaynameLb.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        displaynameLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        displaynameLb.setText("Welcome,");
        TitlePanel.add(displaynameLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, -40, 120, 140));

        welLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        welLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TitlePanel.add(welLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, -50, 320, 160));

        CustomerListTbl.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        CustomerListTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CustomerListTbl);

        viewDetButn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        viewDetButn.setText("View Details");
        viewDetButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetButnActionPerformed(evt);
            }
        });

        nameLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        nameLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLb.setText("Name:");

        nameTxtField.setEditable(false);
        nameTxtField.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        ageLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        ageLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageLb.setText("Age:");

        ageTxtField.setEditable(false);

        genderLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        genderLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        genderLb.setText("Gender:");

        Maleradio.setBackground(new java.awt.Color(204, 204, 255));
        Maleradio.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        Maleradio.setText("Male");
        Maleradio.setEnabled(false);
        Maleradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleradioActionPerformed(evt);
            }
        });

        Femaleradio.setBackground(new java.awt.Color(204, 204, 255));
        Femaleradio.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        Femaleradio.setText("Female");
        Femaleradio.setEnabled(false);
        Femaleradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemaleradioActionPerformed(evt);
            }
        });

        heightTxtField.setEditable(false);

        heightLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        heightLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        heightLb.setText("Height(in cms):");

        weightLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        weightLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightLb.setText("Weight (in Kgs):");

        weightTxtField.setEditable(false);

        msgLb.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        msgLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        msgLb.setText("Message:");

        docMsgTxt.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        noneCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        noneCheckbox.setText("None");
        noneCheckbox.setEnabled(false);

        hyperCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        hyperCheckbox.setText("Hypertension");
        hyperCheckbox.setEnabled(false);
        hyperCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hyperCheckboxActionPerformed(evt);
            }
        });

        pcosCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        pcosCheckbox.setText("PCOS");
        pcosCheckbox.setEnabled(false);

        diabCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        diabCheckbox.setText("Diabetes");
        diabCheckbox.setEnabled(false);

        issueLb.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        issueLb.setForeground(new java.awt.Color(80, 80, 82));
        issueLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        issueLb.setText("Health Issues");

        cholestrolCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        cholestrolCheckbox.setText("Cholestrol");
        cholestrolCheckbox.setEnabled(false);

        thyroidCheckbox.setBackground(new java.awt.Color(204, 204, 255));
        thyroidCheckbox.setText("Thyroid");
        thyroidCheckbox.setEnabled(false);

        ProcessReqjButton.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        ProcessReqjButton.setText("Process Request");
        ProcessReqjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessReqjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(viewDetButn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLb, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(issueLb, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(ageLb, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(ageTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(noneCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(diabCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(cholestrolCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(genderLb, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(Maleradio, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Femaleradio, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(hyperCheckbox)
                        .addGap(16, 16, 16)
                        .addComponent(pcosCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(thyroidCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(heightLb, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(heightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(weightLb)
                        .addGap(34, 34, 34)
                        .addComponent(weightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(msgLb, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(docMsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(ProcessReqjButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(TitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewDetButn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(issueLb))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(noneCheckbox)
                    .addComponent(diabCheckbox)
                    .addComponent(cholestrolCheckbox)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hyperCheckbox)
                    .addComponent(pcosCheckbox)
                    .addComponent(thyroidCheckbox)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderLb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Maleradio)
                            .addComponent(Femaleradio))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heightLb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weightLb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(msgLb, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(docMsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(ProcessReqjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetButnActionPerformed
        // TODO add your handling code here:
        int selectedRow = CustomerListTbl.getSelectedRow();
        if(selectedRow >=0){
            Customer customer = (Customer) CustomerListTbl.getValueAt(selectedRow, 1);
            nameTxtField.setText(customer.getName());
            ageTxtField.setText(String.valueOf(customer.getAge()));
            if(customer.getGender().toLowerCase().equals("male")){
                Maleradio.setSelected(true);
            }else{
                Femaleradio.setSelected(false);
            }
            heightTxtField.setText(String.valueOf(customer.getHeight()));
            weightTxtField.setText(String.valueOf(customer.getWeight()));
            noneCheckbox.setSelected(customer.getIs_None());
            diabCheckbox.setSelected(customer.getIs_diabetes());
            cholestrolCheckbox.setSelected(customer.getIs_cholestrol());
            hyperCheckbox.setSelected(customer.getIs_hypertension());
            pcosCheckbox.setSelected(customer.getIs_pcos());
            thyroidCheckbox.setSelected(customer.getIs_thyroid());
        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_viewDetButnActionPerformed

    private void MaleradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleradioActionPerformed
        Femaleradio.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_MaleradioActionPerformed

    private void FemaleradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemaleradioActionPerformed
        Maleradio.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_FemaleradioActionPerformed

    private void hyperCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hyperCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hyperCheckboxActionPerformed

    private void ProcessReqjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessReqjButtonActionPerformed
        int selectedRow = CustomerListTbl.getSelectedRow();
        if(selectedRow >=0){
            PsychiatristWorkRequest request = (PsychiatristWorkRequest) CustomerListTbl.getValueAt(selectedRow, 2);
            if(!"Result Posted".equals(request.getWorkStatus())){
                request.setWorkStatus("Result Posted");
                request.setPsychiatristResult(docMsgTxt.getText());
                String email = request.getSender().getUsername();
                String name = account.getEmployee().getEmployeeName();
                populateCustom();
                JOptionPane.showMessageDialog(null,"Email has been sent to Customer!","Success",JOptionPane.INFORMATION_MESSAGE);
                docMsgTxt.setText("");
            }else{
                JOptionPane.showMessageDialog(null,"Result has been already Processed","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row","Error",JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessReqjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerListTbl;
    private javax.swing.JRadioButton Femaleradio;
    private javax.swing.JRadioButton Maleradio;
    private javax.swing.JButton ProcessReqjButton;
    private javax.swing.JPanel TitlePanel;
    private javax.swing.JLabel ageLb;
    private javax.swing.JTextField ageTxtField;
    private javax.swing.JCheckBox cholestrolCheckbox;
    private javax.swing.JCheckBox diabCheckbox;
    private javax.swing.JLabel displaynameLb;
    private javax.swing.JTextField docMsgTxt;
    private javax.swing.JLabel genderLb;
    private javax.swing.JLabel heightLb;
    private javax.swing.JTextField heightTxtField;
    private javax.swing.JCheckBox hyperCheckbox;
    private javax.swing.JLabel issueLb;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel msgLb;
    private javax.swing.JLabel nameLb;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JCheckBox noneCheckbox;
    private javax.swing.JCheckBox pcosCheckbox;
    private javax.swing.JCheckBox thyroidCheckbox;
    private javax.swing.JButton viewDetButn;
    private javax.swing.JLabel weightLb;
    private javax.swing.JTextField weightTxtField;
    private javax.swing.JLabel welLbl;
    // End of variables declaration//GEN-END:variables
}
