/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.EnterpriseAdmin;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshada
 */
public class ManageEmployeePanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeePanel
     */
    private Ecosystem system;
    private OrganizationDirectory organizationDirectory;
    private JPanel userContainer;
    private Organization org;
    private boolean userNameValid;
    private boolean nameValid;
    private boolean passwordValid;
    private boolean emailValid;

    public ManageEmployeePanel(JPanel userContainer, OrganizationDirectory organizationDirectory, Ecosystem system) {
        initComponents();
        this.userContainer = userContainer;
        this.organizationDirectory = organizationDirectory;
        this.system = system;
        populateComboBoxOrganization();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnCreateEmployee = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        comboRole = new javax.swing.JComboBox();
        txtPassword = new javax.swing.JTextField();
        comboOrganization = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("CREATE EMPLOYEES");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 244, 50));

        jLabel2.setText("Organization");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel3.setText("Role");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 90, 40));

        jLabel4.setText("Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 190, -1));

        jLabel5.setText("Email Id");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 190, -1));

        jLabel6.setText("Password");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        btnCreateEmployee.setText("CREATE");
        btnCreateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEmployeeActionPerformed(evt);
            }
        });
        add(btnCreateEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 110, 40));

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        comboRole.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 190, 40));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 180, -1));

        comboOrganization.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        comboOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOrganizationActionPerformed(evt);
            }
        });
        add(comboOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 190, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userContainer.remove(this);
        CardLayout layout = (CardLayout) userContainer.getLayout();
        layout.previous(userContainer);


    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEmployeeActionPerformed
        // TODO add your handling code here:
        String userName = txtEmail.getText();
        String password = txtPassword.getText();

        Organization organization = (Organization) comboOrganization.getSelectedItem();

        Employee employee = new Employee();
        employee.setEmployeeName(txtName.getText());

        Role role = (Role) comboRole.getSelectedItem();

        if (!txtEmail.getText().isEmpty() && !txtPassword.getText().isEmpty() && !txtName.getText().isEmpty()) {
            if (organization.getEmployeeList().checkIfUsernameUnique(userName)) {
                if (emailPatternCorrect(userName)) {
                    if (organization.getUserAccountList().checkIfUsernameUnique(userName)) {
                        organization.getEmployeeList().createEmployee(txtName.getText());
                        organization.getUserAccountList().createUserAccount(userName, password, employee, role);
                        JOptionPane.showMessageDialog(this, "Employee is created successfully");
                        txtEmail.setText("");
                        txtPassword.setText("");
                        txtName.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "The username you are trying to add already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                        txtEmail.setText("");
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Add email in this format abc@gmail.com", "Warning", JOptionPane.WARNING_MESSAGE);
                    txtEmail.setText("");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Employee already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                txtName.setText("");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter value in all fields", "Warning", JOptionPane.WARNING_MESSAGE);
            txtName.setText("");
            if (txtEmail.getText().isEmpty() && txtPassword.getText().isEmpty() && txtName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter all fields", "Warning", JOptionPane.WARNING_MESSAGE);

                return;
            }
            if (userNameValid && nameValid && passwordValid) {
                organization.getEmployeeList().createEmployee(txtName.getText());
                organization.getUserAccountList().createUserAccount(userName, password, employee, role);
                JOptionPane.showMessageDialog(null, "Employee created successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                txtEmail.setText("");
                txtPassword.setText("");
                txtName.setText("");

            }
        }


    }//GEN-LAST:event_btnCreateEmployeeActionPerformed

    private void comboOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrganizationActionPerformed
        // TODO add your handling code here:
              Organization organization = (Organization) comboOrganization.getSelectedItem();
        if (organization != null){
            comboRolePopulate(organization);
        }
    }//GEN-LAST:event_comboOrganizationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateEmployee;
    private javax.swing.JComboBox comboOrganization;
    private javax.swing.JComboBox comboRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables

    private void populateComboBoxOrganization() {
        comboOrganization.removeAllItems();

        for (Organization organization : organizationDirectory.getOrganizationList()) {
            comboOrganization.addItem(organization);
        }
    }
    
    private void comboRolePopulate(Organization organization) {
        comboRole.removeAllItems();
        for (Role r : organization.getSupportedRole()) {

            String role = r.toString();
            System.out.println(role);
            comboRole.addItem(r);
        }
    }

    private boolean emailPatternCorrect(String userName) {
        Pattern p = Pattern.compile("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m = p.matcher(userName);
        boolean b = m.matches();
        return b;
    }

}
