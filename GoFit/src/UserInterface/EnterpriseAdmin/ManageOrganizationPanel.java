/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.EnterpriseAdmin;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import UserInterface.SystemAdminOps.SystemAdminOperations;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshada
 */
public class ManageOrganizationPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userContainer;

    /**
     * Creates new form ManageOrganizationPanel
     */
    public ManageOrganizationPanel(JPanel userContainer, Enterprise enterprise) {
        initComponents();
        this.userContainer = userContainer;
        this.enterprise = enterprise;
        //populateOrganizationTable();
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        btnBack = new javax.swing.JButton();
        comboOrganizationType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btncreateOrganization = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganization = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setForeground(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setkEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 153, 0));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/imgBack.png"))); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, 50));

        comboOrganizationType.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        kGradientPanel1.add(comboOrganizationType, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 230, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Organization Type");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, 70));

        btncreateOrganization.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/imgSave.png"))); // NOI18N
        btncreateOrganization.setText("CREATE ORGANIZATION");
        btncreateOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateOrganizationActionPerformed(evt);
            }
        });
        kGradientPanel1.add(btncreateOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 300, 50));

        tblOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Organization Name"
            }
        ));
        jScrollPane1.setViewportView(tblOrganization);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 490, 230));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ORGANIZATION");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, -1, -1));

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 810, 610));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        try
        {
        userContainer.remove(this);
        Component[] trackComponent = userContainer.getComponents();
        Component eachComponent = trackComponent[trackComponent.length - 1];
        EnterpriseAdminOperationsPanel enterpriseAdminOps = (EnterpriseAdminOperationsPanel) eachComponent;
        CardLayout cardLayout = (CardLayout) userContainer.getLayout();
        cardLayout.previous(userContainer);
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }


    }//GEN-LAST:event_btnBackActionPerformed

    private void btncreateOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateOrganizationActionPerformed
        // TODO add your handling code here:
        try
        {
        Organization.Type orgtype = (Organization.Type) comboOrganizationType.getSelectedItem();
        String org = String.valueOf(orgtype) + " Organization";
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equals(org)) {
                JOptionPane.showMessageDialog(null, "The organization you are trying to add already exists !", "Alert", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        enterprise.getOrganizationDirectory().addOrganization(orgtype);
        populateOrganizationTable();
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btncreateOrganizationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btncreateOrganization;
    private javax.swing.JComboBox comboOrganizationType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTable tblOrganization;
    // End of variables declaration//GEN-END:variables

    private void populateOrganizationTable() {
        try
        {
        DefaultTableModel defaultmodel = (DefaultTableModel) tblOrganization.getModel();
        defaultmodel.setRowCount(0);
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationId();
            row[1] = organization.getName();

            defaultmodel.addRow(row);
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }

    private void populateCombo() {
        comboOrganizationType.removeAllItems();
        String enterpriseType = enterprise.getEnterpriseType().toString();
        comboOrganizationType.removeAllItems();
        String ent = enterprise.getEnterpriseType().toString();
         for (Organization.Type type : Organization.Type.values()){
            if(ent.equals("DietRegime")){
                 if (type.getValue().equals(Organization.Type.Nutritionist.getValue())){
                    comboOrganizationType.addItem(type);
                }
                if (type.getValue().equals(Organization.Type.PersonalCoach.getValue())){
                    comboOrganizationType.addItem(type);
                }
                 
            }
            else if(ent.equals("Trainer")){
                 if (type.getValue().equals(Organization.Type.GymTrainer.getValue())){
                    comboOrganizationType.addItem(type);
                }
                 
            }
            else if(ent.equals("Doctor")){
                 if (type.getValue().equals(Organization.Type.Cardiologist.getValue())){
                    comboOrganizationType.addItem(type);
                }
                if (type.getValue().equals(Organization.Type.Physiotherapist.getValue())){
                    comboOrganizationType.addItem(type);
                }
                if (type.getValue().equals(Organization.Type.Psychiatrist.getValue())){
                    comboOrganizationType.addItem(type);
                }
                 
            }
            else if(ent.equals("StoreOutlet")){
                 if (type.getValue().equals(Organization.Type.StoreOutlet.getValue())){
                    comboOrganizationType.addItem(type);
                }
                if (type.getValue().equals(Organization.Type.Delivery.getValue())){
                    comboOrganizationType.addItem(type);
                } 
            }
         }
    }
}
